# Making and using GitHub Issues {#sec-using-issues}

<!-- TODO: Add an introduction here -->

## Learning objectives

The overall learning outcome for this session is to:

1.  

Specific learning objectives are:

{{< include /includes/_using-issues-objectives.qmd >}}

## TODO: Section

::: callout-note
## Reading task: \~4 minutes

TODO: Reading text
:::

## :book: Reading task: What are GitHub Issues?

**Time: \~7 minutes.**

So far, we have learned how to create repositories, add files, and make
changes to files. But what if you want to keep track of tasks or ideas
for future work, or you need to discuss something with your
collaborators before you add it to your repository? This is where GitHub
Issues come in.

[GitHub Issues](https://docs.github.com/en/issues) are "items" or
"records" that can help you keep track of to-do tasks and discussions
related to a specific project or repository. Issues are not files in
your repository; they are completely separate from the repository's
files and folders which we have been working with so far in the "Code"
tab on GitHub. Instead, issues live in the "Issues" tab in your
repository on GitHub. Later in this session, we'll create multiple
issues, so you don't have to go to this tab right now. For now, it's
enough to understand that issues aren't files in your repository, but a
separate tool for keeping track of tasks and ideas.

Issues can be used in many ways. For example, you can use them to:

-   Keep track of tasks you need to do.
-   Discuss ideas with your collaborators.
-   Report problems or bugs.
-   Plan future work.
-   Ask questions or request help from collaborators.

Issues can be assigned to specific people. By assigning an issue to
someone, it becomes clear who is responsible for completing the task
referenced in the issue. Another useful feature is that you can tag
people in comments to notify them of the task or discussion. You tag
people by by typing `@` followed by the person's username. Depending on
the person's notification settings, they will receive an email and/or a
notification on GitHub when they get tagged.

Once you have created an issue, you can add comments to it, discuss the
task with your collaborators, and close the issue once the task is
completed. This way, you can keep track of what needs to be done and
what has already been completed.

Anyone with access to the repository can create an issue. This means
that you can create issues in your own repository, in a repository where
you are a collaborator, and in public repositories in general. This can
be very useful if you, for instance, want to suggest a change or report
a problem in another person's repository.

All issues in the repository are available in the "Issues" tab, where
you can see a list of all the issues in the repository. You can also
filter the issues by their status, such as "open" or "closed", and by
who they are assigned to. By default, only open issues are shown.

Now that we've learned about what GitHub Issues are, let's practice
creating issues in our repositories.

{{< text_snippet sticky_up >}}

## :technologist: Exercise: Create an issue with a list of future recipes to add

**Time: \~10 minutes**

To help you keep track of future tasks, you can use GitHub Issues. Let's
make an Issue with a list of recipes you want to add to your repository.

1.  In your repository, click the "Issues" tab.

2.  Click the green "New issue" button.

3.  Fill in the title with text like "List of future recipes". Then fill
    in the description box with some recipes you would like to add. If
    you don't know any recipes or are not sure, you could write:

    ``` markdown
    I want to add the following recipes to the recipe book:

    -   Pancakes
    -   Apple pie
    ```

4.  Click the green "Create" button to create the issue.

You now have an issue to remind yourself of recipes you want to add!
:tada:

{{< text_snippet sticky_up >}}

## :woman_technologist: Exercise: Comment on your neighbour's issue with a recipe suggestion

**Time: \~10 minutes**

One of the great things about GitHub is that it makes it easier to
collaborate with others. So, interact with someone else's issue by
adding a comment to it:

1.  With your neighbour one at a time, go to each other's GitHub
    repository.
2.  Go to the "Issues" tab in their repository.
3.  Click on the issue that they have created with the list of future
    recipes.
4.  Scroll down to the bottom of the page and write a comment in the
    comment field suggesting a recipe that they could add to their
    recipe book. For example, you could suggest that they add a brownie
    recipe as well :cake:.
5.  When you have written your comment, click the green "Comment" button
    to post the comment.

{{< text_snippet sticky_up >}}

## Add a collaborator to your repository

<!-- TODO: Add context to this code along -->

In your repository, click "Settings", then "Collaborators and teams",
and then "Add people". Add your neighbour as a collaborator to your
repository.

## :technologist: Exercise: Add a recipe to your neighbour's repository

> Time: \~10 minutes.

Now, you'll add a recipe to your neighbour's repository.

1.  Go to your neighbour's GitHub repository.

2.  As we've done during this workshop, add a new file with a recipe,
    naming the file by using the recipe name (remember the correct
    naming for files!). This time, you will be adding the file to your
    neighbour's repository. In the file, add a recipe of your choice.
    For convenience, you can also use the brownie recipe below.

3.  Commit the changes as you have done previously in the workshop. Then
    go to the neighbour's repository's history to see the changes you
    have made.

**Example brownie recipe:**

``` markdown
Ingredients for brownies

- 350 grams dark chocolate
- 250 grams butter
- 4 eggs
- 150 grams brown sugar
- 150 grams white sugar
- 60 grams flour
- 1 tsp baking powder

Instructions

1. Melt the chocolate and butter together.
2. Whisk the eggs until frothy and add brown and white sugar.
3. Add the melted chocolate and butter to the egg mixture.
4. Add the flour and baking powder.
5. Pour the mixture into a baking tray and bake at 170Â°C for 30-35 minutes.
```

{{< text_snippet sticky_up >}}

## :speech_balloon: Discussion activity: Consider advantages to Issues in your own work

**Time: \~4 minutes.**

To connect what we've learned to your own daily work, consider what
advantages (and barriers) there are to using Issues in your own work.

1.  Take \~1 minute to think how you would integrate Issues into your
    work and what advantages and challenges there may be.
2.  Pair up with your neighbour, and take 1.5 minutes each to share what
    you've thought about.

## Summary

-   TODO: List of summary items
